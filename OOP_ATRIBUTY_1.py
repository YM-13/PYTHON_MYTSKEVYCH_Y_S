""" 1:10 5.Атрибуты
getatter - можно указывать значение атрибута с помощью строки, тем самым перебирать все значения в цикле,
так же можем искать несоществующие атрибуты и делать проверку на то, существует ли данный атрибут в классе
или нет. Так же он работает и для экземпляров. Подходит вместо TryExept
setattr - бывает необходимость добовлять ЗНАЧЕНИЯ НА ЛЕТУ, когда объет уже создан и имеет данные, а нам нужно
добавить новые данные. Также можем добавлять строки и перебирать значения в цикле. Для класса и экземпляра.
При изменении/добавлении атрибутов глобально в классе - при создании новых ЭКЗ. класса, передаются все
отребуты (и созданные через setattr). При добавлении атрибутов в экз., они будут тоько для экз..
delatter - используется, если необходимо удалить какой-то атрибут
"""
class User:
    name = "Test"
    age = 17

a = User()
b = User()
c = User()
a.name = "Max"
b.name = "name1"
c.name = "name2"
#print(User.name)
#print(getattr(User, "name")) # ФУНКЦИЯ "getattr" ТАКЖЕ ВЫВОДИТ ЗНАЧЕНИЕ
print(getattr(User, "surname", "Null")) # ПРЕРЕБОР В КЛАССЕ
print(getattr(a, "surname", "Null"))    # ПРЕРЕБОР В АТРИБУТЕ

setattr(a, "surname", "Test2") # ДОБАВИЛИ экземпляру НА ЛЕТУ переменную "surname" со значением "Test2"
print(a.surname)
print(getattr(a, "surname"))

setattr(User, "surname", "default") # ДОБАВИЛИ экземпляру НА ЛЕТУ переменную "surname" со значением "default"
print(getattr(User, "surname"))

print(c.surname)
delattr()
print(dir(User))